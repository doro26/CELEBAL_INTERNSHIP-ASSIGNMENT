1. Query all columns for every row in the CITY table
This query retrieves all attributes for all records from the CITY table.

--SELECT * FROM CITY;

2. Query all columns for the city in CITY with the ID 1661
This query fetches all columns for the city whose ID is 1661.

--SELECT * FROM CITY WHERE ID = 1661;

3. List employee names in alphabetical order
This query prints names of all employees in alphabetical order from the Employee table.

--SELECT NAME FROM EMPLOYEE
  ORDER BY NAME;

4. All Japanese cities from the CITY table
This query fetches all columns for cities in Japan, where COUNTRYCODE = 'JPN'.

--SELECT * FROM CITY WHERE COUNTRYCODE = 'JPN';

5. CITY and STATE from the STATION table
This query retrieves the CITY and STATE values from the STATION table.

--SELECT CITY, STATE FROM STATION;

6. CITY names with even ID, no duplicates
This query returns distinct CITY names with even IDs, ordered alphabetically.

--SELECT DISTINCT CITY
  FROM STATION
  WHERE MOD(ID, 2) = 0
  ORDER BY CITY;

7. Difference between total and distinct CITY names
This query calculates how many CITY values are duplicates in the STATION table.

--SELECT COUNT(CITY) - COUNT(DISTINCT CITY)
  FROM STATION;

8. Shortest and longest CITY names in STATION
These queries find the shortest and longest CITY names. If there are ties, the first alphabetically is chosen.

-- Shortest city name
SELECT CITY, LENGTH(CITY) AS LEN
FROM STATION
ORDER BY LEN ASC, CITY ASC
FETCH FIRST 1 ROW ONLY;

-- Longest city name
SELECT CITY, LENGTH(CITY) AS LEN
FROM STATION
ORDER BY LEN DESC, CITY ASC
FETCH FIRST 1 ROW ONLY;

9. Average city population (rounded down)
This query calculates the average population of all cities, rounded down to the nearest integer.

--SELECT FLOOR(AVG(POPULATION))
  FROM CITY;

10. Average city population by continent
This query joins CITY and COUNTRY tables and calculates average city populations grouped by continent.

--SELECT CO.CONTINENT, FLOOR(AVG(CI.POPULATION))
FROM CITY AS CI
JOIN COUNTRY AS CO
ON CI.COUNTRYCODE = CO.CODE
GROUP BY CO.CONTINENT;
